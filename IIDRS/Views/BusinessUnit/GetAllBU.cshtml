@model IEnumerable<IIDRS.ViewModel.BUViewModel>

@{
    ViewBag.Title = "Business Unit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<link href="~/Content/Search.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
<script src="~/Scripts/twbsPagination.js" type="text/javascript"></script>
<script src="https://cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
<script src="~/scripts/BU_Contact.js"></script>

<div style="float:right">

    <button style="float:right" class="btn btn-sm btn-primary rounded-0" id="btnAddRow"><i class="fa fa-address-book"></i>&nbsp;Add</button>
    <button style="float:right" class="btn btn-sm btn-default rounded-0" id="btnExport"><i class="fa fa-download" style=" height: 25px !important; width: 25px !important;"></i></button>

    <br /><br />
</div>
<div style="float: right;padding-bottom: 10px;">
    @Html.DropDownList("selectedAction", (IEnumerable<SelectListItem>)ViewBag.ActionList, new { @class = "form-control btn-sm btn-primary rounded-0", @id = "ddlBUType" })
</div>
<div class="flexbox">
    <div class="search">
        <div>
            <input type="text" placeholder="Search . . ." required id="Search">
        </div>
    </div>
</div>


<table id="DataTable" class="table table-bordered table-striped table-hover">

    <thead class="thead-dark">
        <tr style="cursor:pointer ;white-space: nowrap">
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.BUId)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.BUName)
            </th>
            <th onclick="sortTable(2)">
                @Html.DisplayNameFor(model => model.BUType)
            </th>
            <th onclick="sortTable(3)">
                @Html.DisplayNameFor(model => model.DUName)
            </th>
            <th onclick="sortTable(4)">
                @Html.DisplayNameFor(model => model.ProjectId)
            </th>
            <th onclick="sortTable(5)">
                @Html.DisplayNameFor(model => model.ProjectName)
            </th>
            <th onclick="sortTable(6)">
                @Html.DisplayNameFor(model => model.ContactName)
            </th>
            <th onclick="sortTable(7)">
                @Html.DisplayNameFor(model => model.EMAIL_ADDR)
            </th>
            <th onclick="sortTable(8)">
                @Html.DisplayNameFor(model => model.PHONE_NO)
            </th>
            <th class="text-center">Active/Inactive</th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tbody>
            <tr class="Search">
                <td>
                    @Html.DisplayFor(modelItem => item.BUId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BUName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BUType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DUName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactName)
                </td>
                <td id="txtEmail">
                    @Html.DisplayFor(modelItem => item.EMAIL_ADDR)
                </td>
                <td id="txtPhoneNo">
                    @Html.DisplayFor(modelItem => item.PHONE_NO)
                </td>
                <td class="text-center" style="pointer-events: none">
                    <label class="custom-switch">
                        @if (item.BU_Flag == "1")
                        {
                            <input type="checkbox" name="custom-switch-checkbox" checked="@item.BU_Flag" class="custom-switch-input">
                        }
                        else
                        {
                            <input type="checkbox" name="custom-switch-checkbox" checked="@item.BU_Flag" disabled class="custom-switch-input">
                        }
                        <span class="custom-switch-indicator"></span>
                    </label>
                </td>
            </tr>
        </tbody>
    }
</table>

<div class="container">
    <nav aria-label="Page navigation">
        <ul class="pagination" id="pagination"></ul>
    </nav>
</div>


<script>

//for pagination
$(document).ready(function () {
        $('#DataTable').SetEditable({
            columnsEd: "1,2,3,4,5,6",
            $addButton: $('#btnAddRow'),
            onAdd: function () {
                addedInLast = true
                // $('#btnAddRow').attr("disabled", "disabled");
                GetContacts();
            },
            onEdit: (row) => {
                let data
                if (addedInLast) {
                    data = getRowData()
                    makeRequest(data)
                }
                else {
                    data = getEditData(row)
                    editRequest(data)
                }
            },
            onDelete: (row) => {
                $("#btnAddRow").removeAttr("disabled");
                let data
                data = getId(row)
                if (data != null) {
                    deleteRequest(data)
                }
            }
        });

        function GetContacts() {
            $.ajax({
                type: "GET",
                url: '/BusinessUnit/PopulateContactDetails',
                success: function (data) {
                    var items = "";
                    $.each(data, function (i, item) {
                        items += "<option value=" + item.contactId + ">" + item.contactDesc + "</option>";
                    });
                    $("#ddlContacts").empty();
                    $("#ddlContacts").html(items);
                    var contactId = $('#ddlContacts').val();
                    GetContactDetailsById(contactId);
                },
                error: function () {
                    $('#ddlContacts').html('No contact details found');
                }
            });
        }

        $(document).on('change', '#ddlContacts', function () {
            var contactId = $(this).val();
            GetContactDetailsById(contactId);
        });
        $(document).on('change', '#ddlBUType', function () {
            var getBUType = $(this).val();
            GetContactDetailsByType(getBUType);
        });

        function GetContactDetailsByType(getBUType) {
            $.ajax({
                type: "GET",
                url: '/BusinessUnit/GetAllBU',
                data: { getBUListByCondition: getBUType },
                success: function (data) {
                    $('#DataTable tbody').html('');
                    $.each(data, function (k, v) {
                        var x = v.BU_Flag;
                        var rows = "<tr " + (x == '0' ? "style='pointer-events: none'" : "") +">"
                            + "<td>" + v.BUId + "</td>"
                            + "<td>" + v.BUName + "</td>"
                            + "<td>" + v.BUType + "</td>"
                            + "<td>" + v.DUName + "</td>"
                            + "<td>" + v.ProjectId + "</td>"
                            + "<td>" + v.ProjectName + "</td>"
                            + "<td>" + v.ContactName + "</td>"
                            + "<td id='txtEmail'>" + v.EMAIL_ADDR + "</td>"
                            + "<td id='txtPhoneNo'>" + v.PHONE_NO + "</td>"
                            + "<td  style='pointer-events: none' class='text-center' style='pointer-events:none'> <input type='checkbox' id='enableDisablecbx' name='custom-switch-checkbox class='custom-switch-input' checked ='" + x + "' " + (x == '0' ? "disabled" : "") + "></td>"
                            + "</tr>";
                        $('#DataTable').append(rows);
                        $('#actionHeader').detach();
                    });
                    $('#DataTable').SetEditable({
                        columnsEd: "1,2,3,4,5,6",
                        $addButton: $('#btnAddRow'),
                        onAdd: function () {
                            addedInLast = true
                            $('#btnAddRow').attr("disabled", "disabled");
                            GetContacts();
                        },
                        onEdit: (row) => {
                            let data
                            if (addedInLast) {
                                data = getRowData()
                                makeRequest(data)
                            }
                            else {
                                data = getEditData(row)
                                editRequest(data)
                            }
                        },
                        onDelete: (row) => {
                            $("#btnAddRow").removeAttr("disabled");
                            let data
                            data = getId(row)
                            if (data != null) {
                                deleteRequest(data)
                            }
                        }
                    });
                },
                error: function () {
                    $('#ddlBUType').html('No contact details found');
                }
            });
        }
        function GetContactDetailsById(contactId) {
            $.ajax({
                type: "GET",
                url: '/BusinessUnit/GetContactDetailsById',
                data: { contactId: contactId },
                success: function (data) {
                    $("#txtEmail").text(data.EMAIL_ADDR);
                    $("#txtPhoneNo").text(data.PHONE_NO);
                },
                error: function () {
                    $('#ddlContacts').html('No contact details found');
                }
            });
        }

        let pageSize = 7;
        var visibleRows = $('table#DataTable tbody tr:visible');

        function drawPagination(totalitems) {
            var $pagination = $('#pagination');
            var totalValue = totalitems;
            var toShow = 7;
            var numOfPage = Math.ceil(totalValue / toShow);
            if (numOfPage > 1) {
                var totalPages = numOfPage;
                var currentPage = $pagination.twbsPagination('getCurrentPage');
                $pagination.twbsPagination('destroy');
                $pagination.twbsPagination($.extend({}, {
                    startPage: currentPage,
                    totalPages: totalPages,
                    visiblePages: 7,
                    onPageClick: function (event, page) {
                        refreshPage(event, page);
                    }
                }));
            } else {
                $pagination.twbsPagination('destroy');
            }
        }
        function refreshPage(event, page) {
            var pageStart = (pageSize * page) - pageSize;
            var pageLast = pageSize * page;
            $(visibleRows).hide();
            var currentRows = $(visibleRows).slice(pageStart, pageLast);
            $(currentRows).show();
        }

        drawPagination(visibleRows.length);

    });
    //for search
    function Contains(text_one, text_two) {
        if (text_one.indexOf(text_two) != -1)
            return true;
    }
    $("#Search").keyup(function () {
        var searchtext = $("#Search").val().toLowerCase();
        $(".Search").each(function () {
            if (!Contains($(this).text().toLowerCase(), searchtext)) {
                $(this).hide();
            }
            else {
                $(this).show();
            }
        });
    });

    $(function () {
        $("#btnExport").click(function () {
            $("#DataTable").table2excel({
                filename: "BU_Contacts_Details.xls",
                name: "BU Sheet",
            });
        });
    });

    //default null #TODO incase for edit we have to send row number to get data of specific row
    function getRowData(row = null) {
        addedInLast = false

        let lastRow = $('#DataTable tr').eq(1);

        console.log(lastRow);
        let totalCols = lastRow[0].cells.length - 1

        let headings = ["BUId", "BUName", "BUType", "DUName", "ProjectId", "ProjectName", "ContactName", "EMAIL_ADDR", "PHONE_NO"]

        let data = {}

        for (let col = 0; col < totalCols; col++) {
            let colData = lastRow[0].cells[col].innerText
            data[headings[col]] = colData
        }
        return data
    }
    function getId(row) {
        addedInLast = false
        let headings = ["BUId"]
        let data = {}
        data[headings[0]] = row.text();
        return data
    }
    function makeRequest(dataToBeSent) {
        var selectedContactId = $('#ddlContacts').val();
        dataToBeSent.PERSON_UID = selectedContactId;
        $.ajax({
            type: "POST",
            url: "https://localhost:44350/BusinessUnit/CreateBusinessUnit",
            data: dataToBeSent,
            success: function () {
                $("#btnAddRow").removeAttr("disabled");
                window.location.reload();
            },
            error: function () {
                $("#btnAddRow").removeAttr("disabled");
                window.location.reload();
            }
        });
    }
    function deleteRequest(dataToBeSent) {

        $.ajax({
            type: "POST",
            url: 'https://localhost:44350/BusinessUnit/DeleteBusinessUnit',
            data: dataToBeSent,
            success: function () {

                window.location.reload();
            },
            error: function () {
                window.location.reload();
            }
        });
    }
    function sortTable(n) {
        var table,
            rows,
            switching,
            i,
            x,
            y,
            shouldSwitch,
            dir,
            switchcount = 0;
        table = document.getElementById("DataTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < rows.length - 1; i++) { //Change i=0 if you have the header th a separate table.
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>
