@model IEnumerable<IIDRS.M_ORG_EXT>

@{
    ViewBag.Title = "Customer Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Search.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
<script src="~/Scripts/twbsPagination.js" type="text/javascript"></script>

<div style="float:right">
    @*<button style="float:right" class="btn btn-sm btn-primary rounded-0" id="btnAddRow"><i class="fa fa-address-book"></i>Add</button>*@
    @*<a href="/Customer/Edit" class="btn btn-sm btn-primary rounded-0"><i class="fa fa-edit"></i>Edit</a>
        <a href="/Customer/Delete" class="btn btn-sm btn-danger rounded-0" onclick="return confirm('Are you sure?') "><i class="fa fa-trash"></i>Delete</a>
        <a href="/Customer/Save" class="btn btn-sm btn-success rounded-0"><i class="fa fa-save"></i>Save</a>*@
    <br /><br />
</div>

<div class="flexbox">
    <div class="search">
        <div>
            <input type="text" placeholder="Search . . ." required id="Search">
        </div>
    </div>
</div>

<table id="DataTable" class="table table-bordered table-striped table-hover ">
    <thead class="thead-dark">
    <th>
        Row Id

    </th>
    <th>
        BU Id
    </th>
    @*<th>
            Row Id
        </th>*@
    @*<th>
            @Html.DisplayNameFor(model => model.M_CUST_SURVEY.ROW_ID)

        </th>
        <th>
            @Html.DisplayNameFor(model => model.M_PARTY.PARTY_UID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.M_POSTN.ROW_ID)
        </th>*@
    @*<th>
            Log In
        </th>*@
    @*<th>
            @Html.DisplayNameFor(model => model.M_USER1.LOGIN)
        </th>*@
    @*<th>
            @Html.DisplayNameFor(model => model.M_ZIPCODE.ROW_ID)
        </th>*@
    <th>
        Name
    </th>
    <th>
        Location
    </th>

    @*<th>
            @Html.DisplayNameFor(model => model.ACCNT_FLG)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ACTIVE_FLG)
        </th>*@
    @*<th>
            @Html.DisplayNameFor(model => model.CUST_END_DT)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CUST_SINCE_DT)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PARTNER_FLG)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PAR_DIVN_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PR_ADDR_PER_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PR_BL_ADDR_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PR_BL_PER_ID)
        </th>*@
    @*<th>
            @Html.DisplayNameFor(model => model.PR_CON_ID)
        </th>*@
    <th>
        Rating
        </th>
            @*<th>
                Created Date
            </th>
            <th>
                Last Updated Date
            </th>*@

        </thead>

        @foreach (var item in Model)
        {
        <tbody>
            <tr class="Search">
                <td>
                    @Html.DisplayFor(modelItem => item.ROW_ID)
                </td>
             
                <td>
                    @Html.DisplayFor(modelItem => item.BU_ID)
                </td>
              
                <td>
                    @Html.DisplayFor(modelItem => item.NAME)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LOC)
                </td>

                
                <td>
                    @Html.DisplayFor(modelItem => item.RATING)
                </td>
              
            </tr>
        </tbody>
    }

    </table>


<div class="container">
    <nav aria-label="Page navigation">
        <ul class="pagination" id="pagination"></ul>
    </nav>
</div>
<script src="~/scripts/bootstable.js">
    //reference of bootstable.js

</script>

<script>
            //built in methods in bootstable.js script......location of bootstable.js in script folder
        let addedInLast = false;
    $('#DataTable').SetEditable({
        columnsEd: "2,3,4",
        $addButton: $('#btnAddRow'),
        onAdd: function () {
            addedInLast = true
            $('#btnAddRow').attr("disabled", "disabled");
        },
        onEdit: (row) => {
            let data
            if (addedInLast) {
                data = getRowData()
                makeRequest(data)
            }
            else {
                data = getEditData(row)
                editRequest(data)
            }
        },
        onDelete: (row) => {
            $("#btnAddRow").removeAttr("disabled");
            let data
            data = getId(row)
            if (data != null) {
                deleteRequest(data)
            }
        }
    });


    //for addition
    function getRowData(row = null) //default null #TODO incase for edit we have to send row number to get data of specific row
    {
        addedInLast = false

        let lastRow = $('#DataTable tr').eq(1);

        console.log(lastRow);
        let totalCols = lastRow[0].cells.length - 1

        let headings = ["ROW_ID", "BU_ID", "NAME", "LOC", "RATING"]

        let data = {}

        for (let col = 0; col < totalCols; col++) {
            let colData = lastRow[0].cells[col].innerText
            data[headings[col]] = colData
        }
        return data
    }

    //for edit of row
    function getEditData(row) {
        let headings = ["ROW_ID", "BU_ID", "NAME", "LOC", "RATING"]
        let data = {}

        for (let col = 0; col < headings.length - 1; col++) {
            let colData = row.eq(col).text();
            data[headings[col]] = colData
        }

        return data;
    }

    function getId(row) {
        addedInLast = false

        let headings = ["ROW_ID"]

        let data = {}

        data[headings[0]] = row.text();

        return data
    }

    // ajax for add
    function makeRequest(dataToBeSent) {

        $.ajax({
            type: "POST",
            url: "https://localhost:44350/Customer/Create",
            data: dataToBeSent,
            success: function () {
                $("#btnAddRow").removeAttr("disabled");
                window.location.reload();
            }
        });
    }


    //ajax for edit
    function editRequest(dataToBeSent) {

        $.ajax({
            type: "POST",
            url: "https://localhost:44350/Customer/Edit",
            data: dataToBeSent,
            success: function () {
                window.location.reload();
            },
            error: function () {
                window.location.reload();

            }
        });
    }
    //ajax post request for delete
    function deleteRequest(dataToBeSent) {

        $.ajax({
            type: "POST",
            url: 'https://localhost:44350/Customer/Delete',
            data: dataToBeSent,
            success: function () {

                window.location.reload();
            },
            error: function () {
                window.location.reload();
            }
        });
    }

    //for pagination
    $(document).ready(function () {
        let pageSize = 7;
        var visibleRows = $('table#DataTable tbody tr:visible');

        function drawPagination(totalitems) {
            var $pagination = $('#pagination');
            var totalValue = totalitems;
            var toShow = 7;
            var numOfPage = Math.ceil(totalValue / toShow);
            if (numOfPage > 1) {
                var totalPages = numOfPage;
                var currentPage = $pagination.twbsPagination('getCurrentPage');
                $pagination.twbsPagination('destroy');
                $pagination.twbsPagination($.extend({}, {
                    startPage: currentPage,
                    totalPages: totalPages,
                    visiblePages: 7,
                    onPageClick: function (event, page) {
                        refreshPage(event, page);
                    }
                }));
            } else {
                $pagination.twbsPagination('destroy');
            }
        }
        function refreshPage(event, page) {
            var pageStart = (pageSize * page) - pageSize;
            var pageLast = pageSize * page;
            $(visibleRows).hide();
            var currentRows = $(visibleRows).slice(pageStart, pageLast);
            $(currentRows).show();
        }

        drawPagination(visibleRows.length);

    });
        //for search
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1)
                return true;
        }
        $("#Search").keyup(function () {
            var searchtext = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchtext)) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            });
        });
</script>

