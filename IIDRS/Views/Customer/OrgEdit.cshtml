@model IEnumerable<IIDRS.M_ORG_EXT>

@{
    ViewBag.Title = "Customer Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <style>

        .important {
            background-color: gray;
            opacity: 0.62;
        }
    </style>

<link href="~/Content/Search.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
<script src="~/Scripts/twbsPagination.js" type="text/javascript"></script>
<script src="https://cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>

<script src="~/scripts/bootstable.js">
    //reference of bootstable.js

</script>
<div style="float:right">
    @*<button style="float:right" class="btn btn-sm btn-primary rounded-0" id="btnAddRow"><i class="fa fa-address-book"></i>Add</button>*@
    @*<a href="/Customer/Edit" class="btn btn-sm btn-primary rounded-0"><i class="fa fa-edit"></i>Edit</a>
        <a href="/Customer/Delete" class="btn btn-sm btn-danger rounded-0" onclick="return confirm('Are you sure?') "><i class="fa fa-trash"></i>Delete</a>
        <a href="/Customer/Save" class="btn btn-sm btn-success rounded-0"><i class="fa fa-save"></i>Save</a>*@
    <button style="float:right" class="btn btn-sm btn-default rounded-0" id="btnExport"><i class="fa fa-download" style=" height: 25px !important; width: 25px !important;"></i></button>

    <br /><br />
</div>
<div style="float: right;padding-bottom: 10px;">
    @Html.DropDownList("selectedAction", (IEnumerable<SelectListItem>)ViewBag.ActionList, new { @class = "form-control btn-sm btn-primary rounded-0", id = "ddSelect" })
</div>


<div class="flexbox">
    <div class="search">
        <div>
            <input type="text" placeholder="Search . . ." required id="Search">
        </div>
    </div>
</div>

<table id="DataTable" class="table table-bordered table-striped table-hover ">
    <thead class="thead-dark">
        <tr style="cursor:pointer">
            @*<th onclick="sortTable(0)">Project Id</th>*@
            <th onclick="sortTable(1)">BU Id</th>
            @*<th onclick="sortTable(2)">Project Name</th>*@
            <th onclick="sortTable(2)">Brand Name</th>
            <th onclick="sortTable(3)">Location </th>
            <th onclick="sortTable(4)">Rating</th>
            <th onclick="sortTable(5)">Survey Period</th>
            <th class="text-center excludecol" >Active/Inactive</th>
        </tr>
        @*<th>
                Row Id

            </th>
            <th>
                BU Id
            </th>*@
        @*<th>
                Row Id
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.M_CUST_SURVEY.ROW_ID)

            </th>
            <th>
                @Html.DisplayNameFor(model => model.M_PARTY.PARTY_UID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.M_POSTN.ROW_ID)
            </th>*@
        @*<th>
                Log In
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.M_USER1.LOGIN)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.M_ZIPCODE.ROW_ID)
            </th>*@
        @*<th>
                Name
            </th>
            <th>
                Location
            </th>*@

        @*<th>
                @Html.DisplayNameFor(model => model.ACCNT_FLG)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ACTIVE_FLG)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.CUST_END_DT)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CUST_SINCE_DT)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PARTNER_FLG)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PAR_DIVN_ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PR_ADDR_PER_ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PR_BL_ADDR_ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PR_BL_PER_ID)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.PR_CON_ID)
            </th>*@
        @*<th>
                Rating
            </th>*@
        @*<th>
                Created Date
            </th>
            <th>
                Last Updated Date
            </th>*@

    </thead>

    @foreach (var item in Model)
    {
        <tbody>
            <tr class="Search">
                @*<td>
            @Html.DisplayFor(modelItem => item.M_BU.PROJ_ID)
        </td>*@

                <td>
                    @Html.DisplayFor(modelItem => item.BU_ID)
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.M_BU.PROJ_NAME)
        </td>*@

                <td>
                    @Html.DisplayFor(modelItem => item.NAME)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LOC)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.RATING)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Survey_Period)
                </td>


                <td class="text-center" style="pointer-events: none" >
                    <label class="custom-switch">
                        @if (item.ACTIVE_FLG == "1")
                        {
                            <input type="checkbox" name="custom-switch-checkbox" checked="@item.ACTIVE_FLG" class="custom-switch-input">
                        }
                        else
                        {
                            <input type="checkbox" name="custom-switch-checkbox" checked="@item.ACTIVE_FLG" disabled class="custom-switch-input">
                        }
                        <span class="custom-switch-indicator"></span>
                    </label>
                </td>

            </tr>
        </tbody>
    }

</table>


<div class="container">
    <nav aria-label="Page navigation">
        <ul class="pagination" id="pagination"></ul>
    </nav>
</div>


<script>

    //for pagination
    $(document).ready(function () {
        let pageSize = 7;
        var visibleRows = $('table#DataTable tbody tr:visible');

        function drawPagination(totalitems) {
            var $pagination = $('#pagination');
            var totalValue = totalitems;
            var toShow = 7;
            var numOfPage = Math.ceil(totalValue / toShow);
            if (numOfPage > 1) {
                var totalPages = numOfPage;
                var currentPage = $pagination.twbsPagination('getCurrentPage');
                $pagination.twbsPagination('destroy');
                $pagination.twbsPagination($.extend({}, {
                    startPage: currentPage,
                    totalPages: totalPages,
                    visiblePages: 7,
                    onPageClick: function (event, page) {
                        refreshPage(event, page);
                    }
                }));
            } else {
                $pagination.twbsPagination('destroy');
            }
        }
        function refreshPage(event, page) {
            var pageStart = (pageSize * page) - pageSize;
            var pageLast = pageSize * page;
            $(visibleRows).hide();
            var currentRows = $(visibleRows).slice(pageStart, pageLast);
            $(currentRows).show();
        }

        drawPagination(visibleRows.length);

    });
    //for search
    function Contains(text_one, text_two) {
        if (text_one.indexOf(text_two) != -1)
            return true;
    }
    $("#Search").keyup(
        
        function () {
            var searchtext = $("#Search").val().toLowerCase();
            debugger;
        $(".Search").each(function () {
            if (!Contains($(this).text().toLowerCase(), searchtext)) {
                $(this).hide();
            }
            else {
                $(this).show();
            }
        });
    });

    //$("#btnExport").click(function () {
    //    $("#DataTable").table2excel({
    //        filename: "x.xls",
    //        name: "BU Sheet",
    //    });
    //});
    $(function () {
        $("#btnExport").click(function () {
            var y;
            if (getBUType == '0') {
                y = "Inactive"
            }
            else if (getBUType == '-1') {
                y = "Active and Inactive"
            }
            else {
                y = "Active";
            }
            $("#DataTable").table2excel({
                exclude: ".excludecol",

                filename: "Survey_Summary(" + y + " Records).xls",
                name: "BU Sheet",
            });
        });
    });

    var getBUType;
    $(document).on('change', '#ddSelect', function () {
        var getBUType = $(this).val();
        GetContactDetailsByType(getBUType);
    });

    function GetContactDetailsByType(getBUType) {
        $.ajax({
            type: "GET",
            url: '/Customer/OrgEdit',
            data: { getBUListByCondition: getBUType },
            success: function (data) {
                $('#DataTable tbody').html('');
                $.each(data, function (k, v) {
                    var x = v.BU_Flag;
                    var rows = "<tr class ='Search'" + (x == '0' ? "style='pointer-events: none'" : "") + ">"
                        + "<td>" + v.BU_ID + "</td>"
                        + "<td>" + v.NAME + "</td>"
                        + "<td>" + v.LOC + "</td>"
                        + "<td>" + v.RATING + "</td>"
                        + "<td>" + v.Survey_Period + "</td>"
                        + "<td  class='text-center'> "
                        + "<input type='checkbox' name='custom-switch-checkbox class='custom-switch-input disabledClick' data-toggle='modal'  data-target=" + ' #enableDisablecbx' + " id='" + v.BUId + "' checked ='" + x + "' " + (x == '0' ? $(':checkbox').wrap('<span class="important"/>') : "") + ">"
                        + "</td>"
                        + "</tr>";
                    $('#DataTable').append(rows);
                    $('#actionHeader').detach();
                });
                let pageSize = 7;
                var visibleRows = $('table#DataTable tbody tr:visible');
                function drawPagination(totalitems) {
                    var $pagination = $('#pagination');
                    var totalValue = totalitems;
                    var toShow = 7;
                    var numOfPage = Math.ceil(totalValue / toShow);
                    if (numOfPage > 1) {
                        var totalPages = numOfPage;
                        var currentPage = $pagination.twbsPagination('getCurrentPage');
                        $pagination.twbsPagination('destroy');
                        $pagination.twbsPagination($.extend({}, {
                            startPage: currentPage,
                            totalPages: totalPages,
                            visiblePages: 7,
                            onPageClick: function (event, page) {
                                refreshPage(event, page);
                            }
                        }));
                    } else {
                        $pagination.twbsPagination('destroy');
                    }
                }
                function refreshPage(event, page) {
                    var pageStart = (pageSize * page) - pageSize;
                    var pageLast = pageSize * page;
                    $(visibleRows).hide();
                    var currentRows = $(visibleRows).slice(pageStart, pageLast);
                    $(currentRows).show();
                }
                drawPagination(visibleRows.length);
            },
            error: function () {
                $('#ddlContacts').html('No contact details found');
            }
        });
    }

    function sortTable(n) {
        var table,
            rows,
            switching,
            i,
            x,
            y,
            shouldSwitch,
            dir,
            switchcount = 0;
        table = document.getElementById("DataTable");
        switching = true;
        //Set the sorting direction to ascending:
        dir = "asc";
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < rows.length - 1; i++) { //Change i=0 if you have the header th a separate table.
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /*check if the two rows should switch place,
                based on the direction, asc or desc:*/
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        //if so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                //Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /*If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again.*/
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

</script>

